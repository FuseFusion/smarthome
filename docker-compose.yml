---
services:
  homeassistant:
    container_name: homeassistant
    hostname: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    volumes:
      - ${DOCKER_DIR}/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    environment:
      - TZ=${TZ}
    restart: unless-stopped
    privileged: true
    networks:
      ha:
        ipv4_address: 192.168.2.77
      ha_sub:

  mosquitto:
    container_name: mosquitto
    restart: unless-stopped
    image: eclipse-mosquitto:latest
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ${DOCKER_DIR}/mosquitto/config:/mosquitto/config
    networks:
      ha_sub:

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest
    ports:
      - 9442:8080
    volumes:
      - ${DOCKER_DIR}/zigbee2mqtt/data:/app/data
    devices:
      - ${ZIGBEE_STICK}:/dev/ttyACM0
    restart: always
    networks:
      ha_sub: null
    depends_on:
      - mosquitto

  esphome:
    container_name: esphome
    image: esphome/esphome
    ports:
      - 6052:6052
    volumes:
      - ${DOCKER_DIR}/esphome/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    privileged: true
    networks:
      ha:
        ipv4_address: 192.168.2.78
    environment:
      - ${ESPHOME_DASHBOARD_USE_PING}

  radicale:
    image: tomsquest/docker-radicale:latest
    container_name: radicale
    ports:
      - 5232:5232
    init: true
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
      - CHOWN
      - KILL
    deploy:
      resources:
        limits:
          memory: 256M
          pids: 50
    # healthcheck:
    #   test: curl -f http://192.168.2.171:5232 || exit 1
    #   interval: 30s
    #   retries: 3
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIR}/radicale/data:/data
      - ${DOCKER_DIR}/radicale/config:/config:ro
    networks:
      ha_sub:

  whisper:
    container_name: whisper
    image: rhasspy/wyoming-whisper:latest
    command: --model tiny-int8 --language de
    privileged: true
    restart: unless-stopped
    environment:
      - TZ=${TZ}
    volumes:
      - ${DOCKER_DIR}/whisper/data:/data
    ports:
      - 10300:10300
    networks:
      ha_sub:

  piper:
    container_name: piper
    image: rhasspy/wyoming-piper:latest
    command: --voice  de_DE-thorsten-high
    privileged: true
    restart: unless-stopped
    environment:
      - TZ=${TZ}
    volumes:
      - ${DOCKER_DIR}/piper/data:/data
    ports:
      - 10200:10200
    networks:
      ha_sub:

  openwakeword:
    container_name: openwakeword
    image: rhasspy/wyoming-openwakeword
    volumes:
      - ${DOCKER_DIR}/openwakeword/data:/data
      - ${DOCKER_DIR}/openwakeword/custom:/custom
    environment:
      - TZ=${TZ}
    command: --preload-model 'ok_nabu' --custom-model-dir /custom
    restart: unless-stopped
    ports:
      - 10400:10400
    networks:
      ha_sub:


  music-assistant-server:
    image: ghcr.io/music-assistant/server:latest # <<< Desired release version here (or use beta to get the latest beta version)
    container_name: music-assistant-server
    restart: unless-stopped
    # Network mode must be set to host for MA to work correctly
    volumes:
      - ${DOCKER_DIR}/music-assistant-server/data:/data/
    # privileged caps (and security-opt) needed to mount smb folders within the container
    cap_add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    security_opt:
      - apparmor:unconfined
    environment:
      # Provide logging level as environment variable.
      # default=info, possible=(critical, error, warning, info, debug)
      - LOG_LEVEL=info
    networks:
      ha:
        ipv4_address: 192.168.2.79
      ha_sub:

  restic-backup:
    image: ghcr.io/fusefusion/restic-cron:latest
    hostname: ubuntu-srv-1
    volumes:
      - ${BACKUP_PATH}:${BACKUP_PATH}
    environment:
      - TZ=${TZ}
      - CRON_BACKUP=${CRON_BACKUP}
      - RESTIC_REPOSITORY=${RESTIC_REPOSITORY}
      - RESTIC_PASSWORD=${RESTIC_PASSWORD}
      - RESTIC_TAG=${RESTIC_TAG}
      - RESTIC_COMPRESSION=${RESTIC_COMPRESSION}
      - RESTIC_REST_USERNAME=${RESTIC_REST_USERNAME}
      - RESTIC_REST_PASSWORD=${RESTIC_REST_PASSWORD}
      - BACKUP_PATH=${BACKUP_PATH}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}

  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:stable
    depends_on:
      - "victoriametrics"
    ports:
      - 8429:8429
    volumes:
      - ${DOCKER_DIR}/victoriametrics/vmagentdata:/vmagentdata
      - ${DOCKER_DIR}/victoriametrics/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://victoriametrics:8428/api/v1/write"
    restart: always
    networks:
      ha:
      victora-metrics:
      
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:stable
    ports:
      - 8428:8428
    volumes:
      - ${DOCKER_DIR}/victoriametrics/vmdata:/storage
    command:
      - "--storageDataPath=/storage"
      - "--httpListenAddr=:8428"
      - "--retentionPeriod=100y"
      - "--selfScrapeInterval=60s"
    restart: always
    networks:
      victora-metrics:
  grafana:
    container_name: grafana
    image: grafana/grafana:9.2.7
    user: "1000:1000"
    volumes:
      - ${DOCKER_DIR}/grafana:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      victora-metrics:
  
  vmbackup:
    container_name: vmbackup
    image: victoriametrics/vmbackup:stable
    user: "1000:1000"
    # depends_on:
    #   - "victoriametrics"
    volumes:
      - ${DOCKER_DIR}/victoriametrics/vmdata:/vmdata
      - ${DOCKER_DIR}/victoriametrics/backup:/backup
    command:
      - "--storageDataPath=/vmdata"
      - "--snapshot.createURL=http://victoriametrics:8428/snapshot/create"
      - "--dst=fs:///backup/"

  restarter:
     image: docker:cli
     volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
     command: ["/bin/sh", "-c", "while true; do sleep 3600; docker restart vmbackup; done"]
     restart: unless-stopped
      
networks:
  ha:
    driver: macvlan
    driver_opts:
      parent: ${INTERFACE_ID}
    ipam:
      config:
        - subnet: 192.168.2.0/24
          ip_range: 192.168.2.254/32
          gateway: 192.168.2.1
  ha_sub:
    driver: bridge
  victora-metrics:
